plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'gg.bckd00r.community'
version = '3.0-SNAPSHOT'


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    //SSB
    maven { url = "https://repo.bg-software.com/repository/api/" }

    //MythicsMob
    maven { url = "https://mvn.lumine.io/repository/maven-public/" }

    //Citizens
    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }

    //global-oraxen
    maven { url = "https://jitpack.io" }

    //itemsadder
    maven {
        url = "https://maven.pkg.github.com/LoneDev6/API-ItemsAdder"
    }

    maven { url =  "https://s01.oss.sonatype.org/content/repositories/snapshots" }// commandAPI snapshots
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT")
    //compileOnly("dev.jorel:commandapi-bukkit-core:9.3.0")
    implementation("dev.jorel:commandapi-bukkit-shade:9.3.0")
    compileOnly("com.bgsoftware:SuperiorSkyblockAPI:2023.2")

    compileOnly("com.github.oraxen:oraxen:1.170.0")
    compileOnly("com.github.LoneDev6:API-ItemsAdder:3.6.2-beta-r3-b")

    compileOnly("io.lumine:Mythic-Dist:5.3.5")
    compileOnly('net.citizensnpcs:citizens-main:2.0.33-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.2.0")
}

shadowJar {
    dependencies {
        include dependency("dev.jorel:commandapi-bukkit-shade:9.3.0")
    }

    // TODO: Change this to my own package name
    relocate("dev.jorel.commandapi", "gg.bckd00r.community.ssbsturctures")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

plugins {
    id 'java'
}

group = 'gg.bckd00r.community'
version = '1.0-beta'
project.setLibsDirName('/Users/mac/Library/Mobile Documents/com~apple~CloudDocs/Desktop/test-server-1.19.4/plugins')


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    //SSB
    maven { url = "https://repo.bg-software.com/repository/api/" }

    //CommandsAPI
    //maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots" }

    //MythicsMob
    maven { url = "https://mvn.lumine.io/repository/maven-public/" }

    //citizens
    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }

    maven { url = "https://jitpack.io" }

}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    compileOnly "com.bgsoftware:SuperiorSkyblockAPI:2023.1"
    compileOnly "io.lumine:Mythic-Dist:5.2.0-SNAPSHOT"
    compileOnly('net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.2.0")

    //implementation("dev.jorel:commandapi-shade:8.7.6")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
